{"version":3,"sources":["redux/todo-reducer.js","redux/redux-store.js","reportWebVitals.js","App.js","AppContainer.js","index.js"],"names":["ADD_POST","UPDATE_NEW_POST","DELETE_POST","CHECKED_POST","initialState","posts","newPostText","todoReducer","state","action","type","newPost","message","checked","newText","filter","_","p","id","map","index","reducers","combineReducers","todoPage","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","props","messagesElement","className","icon","faTrashAlt","onClick","deletePost","faCheck","checkedPost","addPost","updateNewPost","e","post","target","value","onChange","cols","appContainer","connect","dispatch","addPostAC","text","updateNewPostAC","deletePostAC","checkedPostAC","ReactDOM","render","StrictMode","AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.7e88b5b9.chunk.js","sourcesContent":["const ADD_POST = 'ADD_POST';\nconst UPDATE_NEW_POST = 'UPDATE_NEW_POST';\nconst DELETE_POST = 'DELETE_POST';\nconst CHECKED_POST = 'CHECKED_POST';\n\nlet initialState = {\n    posts: [  ],\n    newPostText: ''\n}\n\nconst todoReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case ADD_POST: \n        let newPost = state.newPostText;\n            return {\n                ...state,\n                newPostText: '',\n                posts: [...state.posts, {message: newPost, checked: false}]\n            }\n        case UPDATE_NEW_POST: \n            return {\n                ...state,\n                newPostText: action.newText\n            }\n        case DELETE_POST: \n            return {\n                ...state,\n                posts: [...state.posts.filter((_, p) => p !== action.id)]\n            }\n        case CHECKED_POST: \n            return {\n                ...state,\n                posts: state.posts.map( (p, index) => {\n                    if (action.id === index && p.checked === false) {\n                        return {...p, checked: true}\n                    } else if (action.id === index && p.checked === true) {\n                        return {...p, checked: false}\n                    }\n                    return p\n                })\n            }\n        default:\n            return state; \n    }\n}\n\nexport const addPostAC = (id) => {\n    return {\n        type: ADD_POST,\n        id\n    }\n}\n\nexport const updateNewPostAC = (text) => {\n    return {\n        type: UPDATE_NEW_POST,\n        newText: text\n    }\n}\n\nexport const deletePostAC = (id) => {\n    return {\n        type: DELETE_POST,\n        id\n    }\n}\n\nexport const checkedPostAC = (id) => {\n    return {\n        type: CHECKED_POST,\n        id\n    }\n}\n\nexport default todoReducer;","import {createStore, combineReducers} from 'redux';\nimport todoReducer from './todo-reducer';\n\nlet reducers = combineReducers({\n    todoPage: todoReducer\n});\n\nlet store = createStore(reducers);\n\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = (props) => {\n\n  let newPostText = props.newPostText;\n  \n\n  let messagesElement = props.posts\n        .map( (p, index) => \n            \n            <div key={index} className={p.checked ? 'postItem checked' : 'postItem'}>\n              <p className=\"needDo\">{p.message} </p>\n              <p className=\"alreadyDo\">Сделано </p>\n              <div>\n                <FontAwesomeIcon icon={faTrashAlt} className='iconBtn deleteBtn' onClick={() => {props.deletePost(index)}} />\n                <FontAwesomeIcon icon={faCheck} className='iconBtn' onClick={() => {props.checkedPost(index)}} />\n              </div>\n            </div>\n            );\n\n  let addPost = () => {\n    props.addPost();\n  }\n\n  let updateNewPost = (e) => {\n    let post = e.target.value;\n    props.updateNewPost(post);\n  }\n\n  return (\n    <div>\n        <div className=\"mainWindow\">\n            <h1>Список дел</h1>\n            <div className=\"textBtn\">\n              <textarea onChange={updateNewPost} value={newPostText} cols=\"42\"></textarea>\n              <button onClick={addPost} className=\"addPost\">+</button>\n            </div>\n            {messagesElement}\n        </div>\n        <div className=\"mainWindow mainWindowModal\">\n            <h1>Список дел</h1>\n            <div className=\"textBtn\">\n              <textarea onChange={updateNewPost} value={newPostText} cols=\"42\"></textarea>\n              <button onClick={addPost}>+</button>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {connect} from 'react-redux';\nimport {addPostAC, updateNewPostAC, deletePostAC, checkedPostAC} from './redux/todo-reducer';\nimport App from './App';\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.todoPage.posts,\n        newPostText: state.todoPage.newPostText \n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (id) => {\n            dispatch(addPostAC(id));\n        },\n        updateNewPost: (text) => {\n            dispatch(updateNewPostAC(text));\n        },\n        deletePost: (id) => {\n            dispatch(deletePostAC(id));\n        },\n        checkedPost: (id) => {\n            dispatch(checkedPostAC(id));\n        }\n    }\n}\n\nconst appContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default appContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './redux/redux-store';\nimport reportWebVitals from './reportWebVitals';\nimport AppContainer from './AppContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer store={store} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}